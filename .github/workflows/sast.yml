name: SonarQube SAST Workflow with TestContainers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube-scan:
    name: Run SonarQube Analysis with TestContainers
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
      security-events: write 
      actions: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Make Gradle Wrapper Executable
        run: chmod +x Demo/gradlew
        
      - name: Start SonarQube Container
        run: |
          docker run -d --name sonarqube \
            -e SONAR_JAVA_OPTS="-Xmx2048m -Xms1024m" \
            -p 9000:9000 sonarqube:lts
          echo "Waiting for SonarQube to start..."
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000/api/system/status)" != "200" ]]; do sleep 5; done' || false
          echo "SonarQube is ready"

      - name: Change Default SonarQube Password
        run: |
          sleep 30
          curl -X POST -u admin:admin "http://localhost:9000/api/users/change_password?login=admin&previousPassword=admin&password=admin123"
          
      # Debug step to verify SonarQube is running
      - name: Check SonarQube Status
        run: |
          curl -v http://localhost:9000/api/system/status
          curl -u admin:admin123 http://localhost:9000/api/server/version

      - name: Build and Test with Debug Output
        run: |
          cd Demo
          ./gradlew clean test jacocoTestReport --debug
          
          echo "Checking build directory structure:"
          ls -R build/
          
          echo "Checking JaCoCo report:"
          ls -la build/reports/jacoco/test/ || true

      - name: Run SonarQube Analysis with Debug
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Demo
          ./gradlew sonarqube --debug \
            -Dsonar.verbose=true \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=admin123

      - name: Check SonarQube Task Status
        if: always()
        run: |
          cd Demo
          TASK_ID=$(curl -u admin:admin123 "http://localhost:9000/api/ce/activity?component=testcontainer-project" | jq -r '.tasks[0].id')
          echo "Latest task ID: $TASK_ID"
          
          if [ ! -z "$TASK_ID" ]; then
            echo "Task details:"
            curl -u admin:admin123 "http://localhost:9000/api/ce/task?id=$TASK_ID" | jq '.'
          fi
          
          echo "SonarQube logs:"
          docker logs sonarqube

      - name: Upload Build Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: |
            Demo/build/reports/
            Demo/build/test-results/
          retention-days: 7