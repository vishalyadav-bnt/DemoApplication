name: SonarQube SAST Workflow with TestContainers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube-scan:
    name: Run SonarQube Analysis with TestContainers
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Set up Java environment
      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      # Step 3: Make Gradle Wrapper executable
      - name: Make Gradle Wrapper Executable
        run: chmod +x Demo/gradlew

      # Step 4: Start SonarQube container
      - name: Start SonarQube Container
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube:lts
          echo "Waiting for SonarQube to start..."
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000/api/system/status)" != "200" ]]; do sleep 5; done' || false
          echo "SonarQube is ready"

      # Step 5: Change default SonarQube password
      - name: Change Default SonarQube Password
        run: |
          sleep 30
          curl -X POST -u admin:admin "http://localhost:9000/api/users/change_password?login=admin&previousPassword=admin&password=admin123"

      # Step 6: Build and test the project
      - name: Build and Test
        run: |
          cd Demo && ./gradlew clean build test --info

      # Step 7: Ensure reports directory exists
      - name: Ensure custom-reports directory exists
        run: mkdir -p sonar-reports

      # Step 8: Run SonarQube analysis
      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Demo && ./gradlew sonar \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=admin123 \
            -Dsonar.projectKey=testcontainer-project \
            -Dsonar.java.binaries=build/classes/java/main \
            -Dsonar.java.test.binaries=build/classes/java/test \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.java.libraries=build/libs/*.jar \
            -Dsonar.sourceEncoding=UTF-8 \
            --info

      # Step 9: Debug and locate generated files
      - name: Debug Generated Files
        run: |
          echo "Inspecting .scannerwork directory..."
          ls -R Demo/.scannerwork || true

      # Step 10: Convert SonarQube report to SARIF (Fallback)
      - name: Convert SonarQube Report to SARIF
        run: |
          wget https://github.com/microsoft/sarif-sdk/releases/download/2.1.0/SonarToSarif.jar
          java -jar SonarToSarif.jar \
            -i Demo/.scannerwork/report-task.txt \
            -o sonar-reports/sonar-report.sarif

      # Step 11: Debug SARIF file
      - name: Debug SARIF File Path
        run: |
          echo "Checking for SARIF file in the reports directory..."
          ls -R sonar-reports || true
          echo "Checking if the SARIF file exists..."
          if [ -f sonar-reports/sonar-report.sarif ]; then
            echo "SARIF file found, displaying contents..."
            cat sonar-reports/sonar-report.sarif
          else
            echo "SARIF file not found."
          fi

      # Step 12: Upload SARIF file as artifact
      - name: Upload SARIF File as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sonar-report
          path: sonar-reports/
          retention-days: 30

      # Step 13: Upload test results as artifact
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: Demo/build/reports/tests/
          retention-days: 7
