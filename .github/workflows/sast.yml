name: SonarQube SAST Workflow with TestContainers
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
permissions:
  contents: read
  security-events: write
  actions: read
  issues: write
  pull-requests: write
 
jobs:
  sonarqube-scan:
    name: Run SonarQube Analysis with TestContainers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle
      - name: Make Gradle Wrapper Executable
        run: chmod +x Demo/gradlew
      - name: Start SonarQube Container
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube:latest
          echo "Waiting for SonarQube to start..."
          timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000/api/system/status)" != "200" ]]; do sleep 5; done' || false
          docker logs sonarqube
          echo "SonarQube is ready"
      - name: Change Admin Password
        run: |
          curl -f -X POST -u admin:admin \
            "http://localhost:9000/api/users/change_password?login=admin&password=admin123&previousPassword=admin"
      - name: Create Project Key
        run: |
          curl -f -X POST -u admin:admin123 \
            "http://localhost:9000/api/projects/create?project=Demo&name=Demo"
      - name: Build and Test
        run: |
          cd Demo && ./gradlew clean build test --info  
      - name: Run Sonar Analysis with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd Demo && ./gradlew sonar \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=admin123 \
            -Dsonar.projectKey=Demo \
            -Dsonar.qualitygate.wait=true
      - name: Export SonarQube Issues
        run: |
          curl -f -u admin:admin123 \
            "http://localhost:9000/api/issues/search?componentKeys=Demo&resolved=false&ps=500" \
            -o sonar-issues.json
 
      - name: Convert Issues to SARIF
        uses: advanced-security/sarif-script-generator@v1
        with:
          input: sonar-issues.json
          tool-name: SonarQube
          output: sonar-issues.sarif
 
      - name: Upload JSON Issues
        uses: actions/upload-artifact@v4
        with:
          name: sonar-issues-json
          path: sonar-issues.json
 
      - name: Upload SARIF Report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-issues-sarif
          path: sonar-issues.sarif
 
      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sonar-issues.sarif