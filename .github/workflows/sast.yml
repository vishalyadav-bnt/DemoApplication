name: SonarQube SAST Workflow with TestContainers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube-scan:
    name: Run SonarQube Analysis with TestContainers
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
      security-events: write 
      actions: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Make Gradle Wrapper Executable
        run: chmod +x Demo/gradlew
        
      - name: Start SonarQube Container
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube:community
          echo "Waiting for SonarQube to start..."
          timeout 500 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000/api/system/status)" != "200" ]]; do sleep 5; done' || false
          docker logs sonarqube
          echo "SonarQube is ready"

      - name: Check if Password Change is Necessary
        run: |
          echo "Skipping password change as the API may not be available"
          curl -X POST -u admin:admin "http://localhost:9000/account/reset_password?login=admin&previousPassword=admin&password=admin123" || echo "Password change failed"    

      - name: Generate SonarQube Token
        run: |
          echo "Generating SonarQube token..."
          TOKEN=$(curl -u admin:admin123 -X POST "http://localhost:9000/api/users/generate_token?name=github_token" | jq -r .token)
          echo "Generated Token: $TOKEN"
          echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV
          echo "SonarQube Token generated successfully."

      - name: Create SonarQube Project
        run: |
          echo "Creating SonarQube project..."
          curl -u admin:$SONAR_TOKEN -X POST "http://localhost:9000/api/projects/create?name=testcontainer-project&project=testcontainer-project"
          echo "SonarQube project created successfully."

      
      - name: Check Source Files
        run: |
          echo "Checking source files..."
          find Demo/src -name "*.java" || true
          echo "Checking compiled classes..."
          find Demo/build/classes -name "*.class" || true

      - name: Build and Test
        run: |
          cd Demo && ./gradlew clean build test --info

      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_USERNAME: ${{ secrets.SONAR_USERNAME }}
          SONAR_PASSWORD: admin123
        run: |
          cd Demo && ./gradlew sonar --stacktrace \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.projectKey=testcontainer-project \
            -Dsonar.login=$SONAR_TOKEN \
            --info
            

      - name: Download SARIF Report
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_USERNAME: ${{ secrets.SONAR_USERNAME }}
          SONAR_PASSWORD: admin123
        run: |
          curl -u $SONAR_TOKEN: \
          "http://localhost:9000/api/issues/search?componentKeys=testcontainer-project&resolved=false" \
          -o sonar-report.sarif

      - name: Upload SARIF File as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sonar-report
          path: sonar-report.sarif
          if-no-files-found: warn  
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: Demo/build/reports/tests/
          retention-days: 7

      - name: Upload Build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            build/libs/*.jar
            build/reports/
            build/test-results/
          retention-days: 30
          if-no-files-found: warn
