plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "4.4.1.3373"     //'10.7.0.96327'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testImplementation 'org.testcontainers:testcontainers:1.20.2' 
   
}

tasks.named('test') {
	useJUnitPlatform()
    finalizedBy jacocoTestReport 
}

sonarqube {
    properties {
       property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.projectKey', 'testcontainer-project'
        property 'sonar.projectName', 'TestContainer Project'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.language', 'java'
        property 'sonar.java.source', '21'
        property 'sonar.java.binaries', 'build/classes/java/main'
        property 'sonar.java.test.binaries', 'build/classes/java/test'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property 'sonar.junit.reportPaths', "${buildDir}/test-results/test"
        property 'sonar.verbose', 'true'
        property 'sonar.ws.timeout', '300'
        property 'sonar.login', 'admin'
        property 'sonar.password', 'admin123'
    }
}


// tasks.withType(JacocoReport) {
//     reports {
//         xml.enabled true
//         html.enabled true
//         sarif.enabled true
//         sarif.destination file("${buildDir}/reports/jacoco/jacocoTestReport.sarif")
//     }
// }



jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true  // Enable XML report for SonarQube
    }
}
