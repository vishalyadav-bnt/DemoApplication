plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "5.1.0.4882"     //'10.7.0.96327'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
    properties {
        property 'sonar.projectKey', 'DemoApplication'
        property 'sonar.projectName', 'DemoApplication'
        property "sonar.login", 'sqp_c80eda82e389a358a0cc1a82e88aa48095309dcc'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.language', 'java'
        property 'sonar.java.source', '17'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property 'sonar.tests', 'src/test/java'
        property 'sonar.sources', 'src/main/java'
    }
}
jacocoTestReport {
    dependsOn test // Ensure test task runs before the report generation

    reports {
        xml.required.set(true)  // Use 'required.set(true)' instead of 'xml.enabled true'
        html.required.set(true) // Use 'required.set(true)' instead of 'html.enabled true'
    }

    sourceSets sourceSets.main
    executionData fileTree(dir: buildDir, include: '**/*.exec')
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
